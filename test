#!/usr/bin/env sh

export INPUT_REPOSITORY_OWNER="mondeja"
export INPUT_REPOSITORY_NAME="pr-linked-issues-action-testing"

checkDependencies() {
  if [ "$(command -v "shunit2")" = "" ]; then
    printf "You need to install shunit2 or add it to PATH to run tests.\n" >&2
    exit 1
  fi;
}

testNoLinkedPRs() {
  assertEquals "::set-output name=issues::" "$(INPUT_PULL_REQUEST=5 sh entrypoint.sh)"
}

testLinkedPR() {
  assertEquals "::set-output name=issues::1" "$(INPUT_PULL_REQUEST=4 sh entrypoint.sh)"
}

testLinkedPRs() {
  assertEquals "::set-output name=issues::1,2" "$(INPUT_PULL_REQUEST=3 sh entrypoint.sh)"
}

testLinkedPRsOwners() {
  assertEquals \
    "::set-output name=issues::1,2,7
::set-output name=opener::7
::set-output name=others::1,2" \
    "$(INPUT_PULL_REQUEST=6 INPUT_OWNERS=true sh entrypoint.sh)"
}

testLinkedPRsOwnersNoOthers() {
  assertEquals \
    "::set-output name=issues::1,2
::set-output name=opener::1,2
::set-output name=others::" \
    "$(INPUT_PULL_REQUEST=3 INPUT_OWNERS=true sh entrypoint.sh)"
}

testLinkedPRsByContent() {
  assertEquals \
    "::set-output name=issues::0,2,34,65,7" \
    "$(INPUT_PULL_REQUEST=8 INPUT_ADD_LINKS_BY_CONTENT="**Closes**: #{issue_number}\nfishes #{issue_number}\nhumancipates #{issue_number}\nmakes #{issue_number} crazy\nresolves #{issue_number} even if not exists" sh entrypoint.sh)"
}

main() {
  checkDependencies
  . shunit2
}

main
